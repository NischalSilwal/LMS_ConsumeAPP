@model LMS_ConsumeAPP.Application.DTOs.AuthorDTO.AuthorDto

<h2>Create Author</h2>

<form asp-action="CreateAuthor" method="post">
    <div class="form-group mb-3">
        <label asp-for="Name" class="control-label">Name</label>
        <input asp-for="Name" class="form-control" required />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="form-group mb-3">
        <label asp-for="Bio" class="control-label">Bio</label>
        <textarea asp-for="Bio" class="form-control" required></textarea>
        <span asp-validation-for="Bio" class="text-danger"></span>
    </div>

    <div class="form-group mb-3">
        <label for="bookIdsInput">Book IDs (comma-separated)</label>
        <input type="text" id="bookIdsInput" class="form-control"
               placeholder="Enter book IDs (e.g., 1,2,3)" />
        <span asp-validation-for="BookIds" class="text-danger"></span>
    </div>

    <div id="bookIdsContainer">
        <!-- Hidden inputs will be dynamically added here -->
    </div>

    <div class="form-group mt-3">
        <input type="submit" value="Create" class="btn btn-primary" onclick="return prepareBookIds()" />
        <a asp-action="IndexAuthor" class="btn btn-secondary">Back to List</a>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        function prepareBookIds() {
            // Clear previous hidden inputs
            const container = document.getElementById('bookIdsContainer');
            container.innerHTML = '';

            // Get and process book IDs
            const bookIdsInput = document.getElementById('bookIdsInput').value;
            const bookIds = bookIdsInput.split(',')
                .map(id => id.trim())
                .filter(id => id !== '')
                .map(id => parseInt(id))
                .filter(id => !isNaN(id));

            // Create hidden inputs for each book ID
            bookIds.forEach((id, index) => {
                const input = document.createElement('input');
                input.type = 'hidden';
                input.name = `BookIds[${index}]`;
                input.value = id;
                container.appendChild(input);
            });

            return true;
        }
    </script>
}